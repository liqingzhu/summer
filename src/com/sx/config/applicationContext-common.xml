<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 获取JDBC连接属性 -->             
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:com/sx/config/config.properties</value>
				<value>classpath:com/sx/config/jdbc.properties</value>
			</list>
		</property>
	</bean>
    <!-- 配置数据源 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="driverClass" value="${jdbc.driverClassName}"/>  
        <property name="jdbcUrl" value="${jdbc.url}"/>  
        <property name="user" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
    </bean>  
    <!-- sqlSessionFactory -->  
    <!-- MyBatis在spring中Bean的配置，都是固定的 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="configLocation" value="classpath:com/sx/config/mybatis-config.xml" />  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" /> 
        <!-- 
        <constructor-arg index="1" value="BATCH" /> 
         -->
    </bean>
    <!-- 事务管理器配置,单数据源事务 --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> 
	</bean> 
	<aop:config proxy-target-class="true"> 
		<aop:advisor pointcut="execution(public * com.sx.*..services.*.*(..))" advice-ref="txAdvice" /> 
	</aop:config> 
	<tx:advice id="txAdvice"> 
		<tx:attributes> 
			<tx:method name="get*" read-only="true" /> 
			<tx:method name="find*" read-only="true" /> 
			<tx:method name="query*" read-only="true" /> 
			<tx:method name="is*" read-only="true" /> 
			<tx:method name="*" propagation="REQUIRED" /> 
		</tx:attributes> 
	</tx:advice>
	<!-- 配置邮件发送引擎 -->
	
	<!-- 邮件发送器 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
			</props>
		</property>
	</bean>
	<bean id="templateMail" class="com.sx.util.message.email.MailUtil">
		<property name="javaMailSender" ref="mailSender"></property>
		<property name="from" value="${mail.from}"></property>
		<property name="encoding" value="UTF-8"></property>
		<property name="velocityEngine" ref="velocityEngine"></property>
		<property name="title" value="www.tiesuohh.com.cn"></property>
	</bean>
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="classpath:com/sx/util/template"></property>
	</bean> 
</beans>
